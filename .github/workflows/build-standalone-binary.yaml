name: Build Standalone Binary

on:
  workflow_dispatch:

jobs:
  build-binary:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install libusb-package

      - name: Build standalone binary with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m PyInstaller --onefile --name base-python-app --add-data "routes:routes" \
            --hidden-import=fastapi \
            --hidden-import=fastapi.responses \
            --hidden-import=pydantic \
            --hidden-import=uvicorn \
            --hidden-import=sentry_sdk \
            --hidden-import=celery \
            --hidden-import=sqlalchemy \
            --hidden-import=requests \
            --hidden-import=dotenv \
            --collect-submodules celery \
            --collect-submodules kombu \
            --collect-submodules billiard \
            main.py

      - name: Build standalone binary with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: >
          python -m PyInstaller --onefile --name base-python-app --add-data "routes;routes" --hidden-import=fastapi --hidden-import=fastapi.responses --hidden-import=pydantic --hidden-import=uvicorn --hidden-import=sentry_sdk --hidden-import=celery --hidden-import=sqlalchemy --hidden-import=requests --hidden-import=dotenv --collect-submodules celery --collect-submodules kombu --collect-submodules billiard main.py

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: base-python-app-${{ matrix.os }}-binary
          path: |
            dist/base-python-app
            dist/base-python-app.exe
